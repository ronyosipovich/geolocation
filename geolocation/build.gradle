apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}


configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
    // Logging
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

    //Dependency Injection
    compile group: 'com.google.inject', name: 'guice', version: '4.0'

    // Testing
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'


    // Json
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.4'

    // Integrations
    // I am including this because it matches the api that we are querying 1:1.
    // It therefore contains the GsonAdapters to deserialize the responses,etc. and will be updated whenever google would ever want to change their api.
    // Were we to need more information from this api, rather then reinvent the wheel, we could leverage the gson adapters, etc.
    // It has an apache 2 license
    compile group: 'com.google.maps', name: 'google-maps-services', version: '0.1.1'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.workmarket.geolocation.app.GeoLocationConsoleApp'
        )
    }
}
